name: Build vLLM Windows Wheel

on:
  release:
    types:
      - published

jobs:
  build-wheel:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        python: ["3.10", "3.12"]
        cuda: [
          "12.4.1|cu124",
          "12.6.3|cu126"
        ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - name: Parse CUDA matrix
        shell: pwsh
        run: |
          $parts = "${{ matrix.cuda }}" -split '\|'
          echo "CUDA_VER=$($parts[0])" >> $env:GITHUB_ENV
          echo "CUDA_TAG=$($parts[1])" >> $env:GITHUB_ENV

      - name: Setup CUDA
        uses: Jimver/cuda-toolkit@v0.2.24
        with:
          cuda: ${{ env.CUDA_VER }}
          method: 'local'

      - name: Init MSVC Environment and Build
        shell: pwsh
        run: |
          $vsPath = & "C:\Program Files (x86)\Microsoft Visual Studio\Installer\vswhere.exe" -latest -products * -requires Microsoft.VisualStudio.Component.VC.Tools.x86.x64 -property installationPath
          & "$vsPath\VC\Auxiliary\Build\vcvarsall.bat" x64
          $env:DISTUTILS_USE_SDK = "1"
          $env:VLLM_TARGET_DEVICE = "cuda"
          $env:MAX_JOBS = "4"
          python -m pip install --upgrade pip
          pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/$env:CUDA_TAG
          pip install -r requirements/build.txt
          pip install -r requirements/windows.txt
          pip wheel . --no-build-isolation -w dist
          $distDir = "dist_$($env:CUDA_TAG)_py$($env:PYTHON_VERSION)"
          New-Item -ItemType Directory -Path $distDir -Force
          Move-Item -Path "dist\*.whl" -Destination $distDir

      - name: Upload wheel to release
        uses: softprops/action-gh-release@v2
        with:
          files: dist_$env:CUDA_TAG_py$env:PYTHON_VERSION/*.whl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
