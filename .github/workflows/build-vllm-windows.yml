name: Build vLLM Windows Wheel

on:
  push:
    tags:
      - "v*"

jobs:
  build-wheel:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        python: [3.10, 3.12]
        cuda: [
          "12.4.1|cu124|https://developer.download.nvidia.com/compute/cuda/12.4.1/network_installers/cuda_12.4.1_windows_network.exe",
          "12.6.3|cu126|https://developer.download.nvidia.com/compute/cuda/12.6.3/network_installers/cuda_12.6.3_windows_network.exe"
        ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - name: Parse CUDA matrix
        shell: pwsh
        run: |
          $parts = $env:CUDA -split '\|'
          $env:CUDA_VER = $parts[0]
          $env:CUDA_TAG = $parts[1]
          $env:CUDA_URL = $parts[2]

      - name: Download and Install CUDA
        shell: pwsh
        run: |
          Invoke-WebRequest -Uri $env:CUDA_URL -OutFile C:\cuda_installer.exe
          & C:\cuda_installer.exe -s ("nvcc_" + $env:CUDA_VER.Substring(0,4)) ("cudart_" + $env:CUDA_VER.Substring(0,4))

      - name: Init MSVC Environment and Build
        shell: pwsh
        run: |
          & "C:\Program Files (x86)\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x64
          $env:DISTUTILS_USE_SDK = "1"
          $env:VLLM_TARGET_DEVICE = "cuda"
          $env:MAX_JOBS = "4"
          python -m pip install --upgrade pip
          pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/$env:CUDA_TAG
          pip install -r requirements/build.txt
          pip install -r requirements/windows.txt
          pip wheel . --no-build-isolation -w dist
          $distDir = "dist_$($env:CUDA_TAG)_py$($env:PYTHON_VERSION)"
          New-Item -ItemType Directory -Path $distDir -Force
          Move-Item -Path "dist\*.whl" -Destination $distDir

      - name: Upload wheel to release
        uses: softprops/action-gh-release@v2
        with:
          files: dist_$env:CUDA_TAG_py$env:PYTHON_VERSION/*.whl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
